require 'controller'

class Router

# On veut qu'un "Router.new" lanc√© par app.rb, cr√©e automatique une instance "@controller"
  def initialize
    @controller =  Controller.new
  end 

# Rappelle-toi que l'on fait "Router.new.perform" dans app.rb => apr√®s initialize, on d√©finit donc perform.
  def perform 
    system 'clear'
    puts
    puts "BIENVENUE DANS THE GOSSIP PROJECT !"
    puts

    while true

      #on affiche le menu
      puts "Tu veux faire quoi jeune mouss' ?"
      puts
      puts "1. Je veux cr√©er un gossip"
      puts "2. Je veux afficher tous les gossip"
      puts "3. Je veux supprimer un gossip"
      puts "4. Je veux quitter l'app"
      puts
      print "üñç  > "
      params = gets.chomp.to_i #on attend le choix de l'utilisateur

      case params #en fonction du choix
      when 1
        system 'clear'
        puts
        puts "Tu as choisi de cr√©er un gossip" 
        puts
        @controller.create_gossip

      when 2
        system 'clear'
        puts
        puts "Tu as choisi d'afficher tous les gossips"
        puts
        @controller.index_gossips

      when 3
        system 'clear'
        puts
        puts "Tu as choisi de supprimer un gossip"
        puts
        @controller.delete_gossip

      when 4
        system 'clear'
        puts
        puts "√Ä bient√¥t ! üëã"
        puts
        sleep 3
        system 'clear'
        break #Ce "break" permet de sortir de la boucle while. C'est m√™me la seule fa√ßon d'en sortir.

      else
        system 'clear'
        puts
        puts "Ce choix n'existe pas, merci de ressayer" #Si l'utilisateur saisit une entr√©e non pr√©vue, il retourne au d√©but du "while true".
        puts 
        sleep 3
        system 'clear'
        #C'est pour √ßa que la boucle est infinie: potentiellement, il peut se gourer jusqu'√† la fin des temps :)

      end

    end

  end

end